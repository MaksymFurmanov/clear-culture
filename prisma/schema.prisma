generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  name     String
  email    String  @unique
  password String?

  Order           Order[]
  FavoriteProduct FavoriteProduct[]
  Cart            Cart?
  Address         Address[]
}

model ProductGroup {
  id               String  @id @default(cuid())
  name             String
  descriptionUrl   String?
  pageUrl          String?
  defaultProductId String? @unique

  products       Product[] @relation("ProductGroup")
  defaultProduct Product?  @relation(fields: [defaultProductId], references: [id])
}

model Product {
  id             String  @id @default(cuid())
  name           String
  price          Decimal
  photoUrl       String
  color          String?
  colorHEX       String?
  size           String?
  volume         String?
  quantityForOne Int?
  groupId        String

  group        ProductGroup      @relation("ProductGroup", fields: [groupId], references: [id])
  productGroup ProductGroup?
  CardItem     FavoriteProduct[]
  OrderItem    OrderItem[]
  CartItem     CartItem[]
}

model FavoriteProduct {
  id        String @id @default(cuid())
  userId    String
  productId String

  Product Product @relation(fields: [productId], references: [id])
  User    User    @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
}

model Order {
  id            String    @id @default(cuid())
  createdDate   DateTime  @default(now())
  processedDate DateTime?
  shippedDate   DateTime?
  arrivingDate  DateTime?
  price         Decimal
  delivery      Decimal
  status        String    @default("Pending")
  userId        String
  addressId     String

  user      User        @relation(fields: [userId], references: [id])
  address   Address     @relation(fields: [addressId], references: [id])
  OrderItem OrderItem[]
}

model OrderItem {
  id        String @id @default(cuid())
  quantity  Int
  orderId   String
  productId String

  order    Order   @relation(fields: [orderId], references: [id])
  cartItem Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        String  @id @default(cuid())
  price     Decimal @default(0)
  delivery  Decimal @default(0)
  userId    String  @unique
  addressId String?

  user     User       @relation(fields: [userId], references: [id])
  address  Address?   @relation(fields: [addressId], references: [id])
  CartItem CartItem[]
}

model CartItem {
  id        String @id @default(cuid())
  quantity  Int
  cartId    String
  productId String

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

model Address {
  id            String @id @default(cuid())
  firstName     String
  lastName      String
  email         String
  phoneNumber   String
  country       String
  city          String
  streetAddress String
  zipCode       String
  userId        String

  user  User    @relation(fields: [userId], references: [id])
  Cart  Cart[]
  Order Order[]
}
